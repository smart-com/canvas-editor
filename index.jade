doctype html
<!--[if lt IE 7]>
<html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="">
<![endif]-->
<!--[if IE 7]>
<html class="no-js lt-ie9 lt-ie8" lang="">
<![endif]-->
<!--[if IE 8]>
<html class="no-js lt-ie9" lang="">
<![endif]-->
<!--[if gt IE 8]><!-->
html( lang="ru" )
    <!--<![endif]-->
    header
        include header.jade
    body
        main.container-fluid
            div.row
                div.tabs.col-md-12
                    div.btn-field.inner
                        // Список с названиями табов
                        ul.nav.nav-tabs.nav-justified
                            li.active
                                a( href="#drawing-properties" data-toggle="tab" ) Опции рисования
                            li
                                a( href="#line-drawing" data-toggle="tab" ) Линии
                            li
                                a( href="#shadow-drawing" data-toggle="tab" ) Тени
                            li
                                a( href="#bg-drawing" data-toggle="tab" ) Фон
                            li
                                a( href="#shapes-drawing" data-toggle="tab" ) Фигуры
                            li
                                a( href="#text-drawing" data-toggle="tab" ) Текст
                            li
                                a( href="#images-drawing" data-toggle="tab" ) Изображения
                            li
                                a( href="#animation-field" data-toggle="tab" ) Анимация

                    // ===================================================================
                    // Содержимое всех вкладок
                    section#canvas-btn-field.canvas-btn-field.tab-content.clearfix
                        // Первая акти.вная вкладка
                        section#drawing-properties.tab-pane.fade.in.active.well
                            div.btn.btn-default
                                span#begin-path Begin Path
                            p.desc.
                                Начать путь - это значит начать рисовать новую часть общей картины.
                                Канвас все рисует одной непрерывной линией.
                                Все нарисованные фигуры будут соединены между собой до тех пор,
                                пока вы не начнете новый путь.<br>

                                <code class="language-js">
                                    ctx.strokeRect( 10, 10, 100, 100 );<br>
                                    ctx.strokeRect( 20, 20, 120, 120 );<br>
                                    void ctx.beginPath();<br>
                                    ctx.strokeRect( 40, 40, 140, 140 );<br>
                                </code>
                            div.btn.btn-default
                                span#close-path Close Path
                            p.desc.
                                Закрыть путь это значит завершить фигуру в начальной точке.
                                Канвас попытается начертить прямую линию от текущей точки до начала.
                                Если фигура уже была закрыта или имеет только одну точку,
                                то просто ничего не произойдет.<br>
                                <code class="language-js example">
                                    void ctx.closePath();
                                </code>
                            div.btn.btn-default
                                span#move-canvas Move Canvas
                            p.desc.
                                Сдвигает систему координат канваса на х по горизонтали
                                и у по вертикали.
                                 <code class="language-js example">
                                    void ctx.translate( x, y );
                                 </code>
                            div.btn.btn-default
                                span#rotate-canvas Rotate Canvas
                            p.desc.
                                The CanvasRenderingContext2D.rotate() method of the
                                Canvas 2D API adds a rotation to the transformation
                                matrix. The angle argument represents a clockwise
                                rotation angle and is expressed in radians.
                                void ctx.rotate(angle);
                            div.btn.btn-default
                                span#bezier Bezier Curve
                            p.desc.
                                The CanvasRenderingContext2D.bezierCurveTo() method
                                of the Canvas 2D API adds a cubic Bézier curve to the path.
                                It requires three points. The first two points are control points
                                and the third one is the end point.
                                The starting point is the last point in the current path,
                                which can be changed using moveTo() before creating the Bézier curve.
                                void ctx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);
                                cp1x - The x axis of the coordinate for the first control point.
                                cp1y - The y axis of the coordinate for first control point.
                                cp2x - The x axis of the coordinate for the second control point.
                                cp2y - The y axis of the coordinate for the second control point.
                                x - The x axis of the coordinate for the end point.
                                y - The y axis of the coordinate for the end point.
                        // ============================================================
                        section#line-drawing.line-drawing.tab-pane.fade.well
                            div.btn.btn-default
                                span#move-to Move To
                            p.desc.
                                The CanvasRenderingContext2D.moveTo() method of the
                                Canvas 2D API moves the starting point of a new
                                sub-path to the (x, y) coordinates.
                                void ctx.moveTo(x, y);
                            div.btn.btn-default
                                span#line-to Line To
                            p.desc.
                                The CanvasRenderingContext2D.lineTo() method of the
                                Canvas 2D API connects the last point in the
                                sub-path to the x, y coordinates with a straight
                                line (but does not actually draw it).
                                void ctx.lineTo(x, y);
                            div.btn.btn-default
                                span#stroke Stroke
                            p.desc.
                                The CanvasRenderingContext2D.stroke() method of the
                                Canvas 2D API strokes the current or given path
                                with the current stroke style using the non-zero
                                winding rule.
                                void ctx.stroke();
                                void ctx.stroke(path);
                            div.btn.btn-default
                                span#line-width Line Width
                            p.desc.
                                Ширина линии. По умолчанию 1.0.
                                Дробные, отрицательные значения и ноль игнорируются.
                                <code class="language-js">
                                    // Пример<br>
                                    ctx.lineWidth = value;<br>
                                </code>
                            div.btn.btn-default
                                span#line-cap-round End Of Line
                            p.desc.
                                Стиль окончания линии. По умолчанию 'butt'.
                                <code class="language-js">
                                    // Пример<br>
                                    ctx.lineCap = "butt";<br>
                                    ctx.lineCap = "round";<br>
                                    ctx.lineCap = "square";<br>
                                </code>
                            div.btn.btn-default
                                span#line-join Join Style
                            p.desc.
                                Стиль соединения линий. По умолчанию 'miter'.
                                Длина соединения - miter limit ratio может быть задано
                                атрибутом miterLimit ( 10.0 - по умолчанию ).
                                <code class="language-js">
                                    // Пример<br>
                                    ctx.lineJoin  = "bevel";<br>
                                    ctx.lineJoin = "round";<br>
                                    ctx.lineJoin = "miter";<br>
                                    ctx.miterLimin = 5.2;
                                </code>
                            div.btn.btn-default
                                span#border-radius Border Radius
                            p.desc.
                                Don't working with the filled shapes.
                                The CanvasRenderingContext2D.lineJoin property of the Canvas 2D API determines
                                how two connecting segments (of lines, arcs or curves) with non-zero lengths in
                                a shape are joined together (degenerate segments with zero lengths, whose
                                specified endpoints and control points are exactly at the same position, are skipped).
                                ctx.lineJoin = "bevel";
                                ctx.lineJoin = "round";
                                ctx.lineJoin = "miter";
                            div.btn.btn-default
                                span#stroke-style Border Style
                            p.desc.
                                The CanvasRenderingContext2D.strokeStyle property of
                                the Canvas 2D API specifies the color or style to
                                use for the lines around shapes. The default is #000
                                (black).
                                ctx.strokeStyle = color;
                                ctx.strokeStyle = gradient;
                                ctx.strokeStyle = pattern;
                            div.btn.btn-default
                                span#straight-line Straight Line
                            p.desc ...
                            div.btn.btn-default
                                span#arc Arc Line
                            p.desc.
                                The CanvasRenderingContext2D.arc() method of the Canvas 2D API
                                adds an arc to the path which is centered at (x, y) position
                                with radius r starting at startAngle and ending at endAngle
                                going in the given direction by anticlockwise (defaulting to clockwise).
                                void ctx.arc(x, y, radius, startAngle, endAngle, anticlockwise);

                                x - The x coordinate of the arc's center.
                                y - The y coordinate of the arc's center.
                                radius - The arc's radius.
                                startAngle - The angle at which the arc starts, measured clockwise
                                from the positive x axis and expressed in radians.
                                endAngle - The angle at which the arc ends, measured clockwise
                                from the positive x axis and expressed in radians.
                                anticlockwise Optional - An optional Boolean
                                which, if true, causes the arc to be drawn counter-clockwise between the two angles.
                                By default it is drawn clockwise.
                        // ===================================================================
                        section#shadow-drawing.shadow-drawing.tab-pane.fade.well
                            div.btn.btn-default
                                span#shadow-color Shadow Color
                            p.desc.
                                The CanvasRenderingContext2D.shadowColor property of the Canvas 2D API
                                specifies the color of the shadow.
                                ctx.shadowColor = color;
                            div.btn.btn-default
                                span#shadow-blur Shadow Blur
                            p.desc.
                                The CanvasRenderingContext2D.shadowBlur property of the Canvas 2D API
                                specifies the level of the blurring effect; this value doesn't correspond
                                to a number of pixels and is not affected by the current transformation matrix.
                                The default value is 0.
                                ctx.shadowBlur = level;
                            div.btn.btn-default
                                span#shadow-position Shadow Position
                            p.desc.
                                The CanvasRenderingContext2D.shadowOffsetX property of the Canvas 2D API
                                specifies the distance that the shadow will be offset in horizontal distance.
                                ctx.shadowOffsetX = offset;
                        // ===========================================================================
                        section#bg-drawing.bg-drawing.tab-pane.fade.well
                            div.btn.btn-default
                                span#bg-color Background Color
                            p.desc.
                                The CanvasRenderingContext2D.fillStyle property of the Canvas 2D API
                                specifies the color or style to use inside shapes. The default is #000 (black).

                                ctx.fillStyle = color;
                                ctx.fillStyle = gradient;
                                ctx.fillStyle = pattern;
                            div.btn.btn-default
                                span#opacity Opacity
                            p.desc.
                                The CanvasRenderingContext2D.globalAlpha property of the Canvas 2D API
                                specifies the alpha value that is applied to shapes and images
                                before they are drawn onto the canvas.
                                The value is in the range from 0.0 (fully transparent) to 1.0 (fully opaque).
                                ctx.globalAlpha = value;
                            div.btn.btn-default
                                span#create-linear-gradient Create Linear Gradient
                            p.desc.
                                The CanvasRenderingContext2D.createLinearGradient() method of the Canvas 2D API
                                creates a gradient along the line given by the coordinates represented by the parameters.
                                This method returns a linear CanvasGradient.
                                CanvasGradient ctx.createLinearGradient(x0, y0, x1, y1);

                            div.btn.btn-default
                                span#create-radial-gradient Create Radial Gradient
                            p.desc.
                                The CanvasRenderingContext2D.createRadialGradient() method of the Canvas 2D API
                                creates a radial gradient given by the coordinates of the two circles
                                represented by the parameters. This method returns a CanvasGradient.
                                CanvasGradient ctx.createRadialGradient(x0, y0, r0, x1, y1, r1);
                                x0 - The x axis of the coordinate of the start circle.
                                y0 - The y axis of the coordinate of the start circle.
                                r0 - The radius of the start circle.
                                x1 - The x axis of the coordinate of the end circle.
                                y1 - The y axis of the coordinate of the end circle.
                                r1 - The radius of the end circle.
                                CanvasGradient ctx.createRadialGradient(x0, y0, r0, x1, y1, r1);

                        // ===========================================================================
                        section#shapes-drawing.shapes-drawing.tab-pane.fade.well
                            div.btn.btn-default
                                span#fill-shape Fill Shape
                            p.desc.
                                The CanvasRenderingContext2D.fill() method of the Canvas 2D API
                                fills the current or given path with the current fill style
                                using the non-zero or even-odd winding rule.
                                void ctx.fill();
                                void ctx.fill(fillRule);
                                void ctx.fill(path, fillRule);
                            div.btn.btn-default
                                span#round Round
                            p.desc ...
                            div.btn.btn-default
                                span#empty-rectangle Empty Rectangle
                            p.desc.
                                The CanvasRenderingContext2D.strokeRect() method of the Canvas 2D API paints
                                a rectangle which has a starting point at (x, y) and has a w width and an h
                                height onto the canvas, using the current stroke style.
                                void ctx.strokeRect(x, y, width, height);
                            div.btn.btn-default
                                span#fill-rectangle Fill Rectangle
                            p.desc.
                                The CanvasRenderingContext2D.fillRect() method of the Canvas 2D API draws
                                a filled rectangle at (x, y) position whose size is determined by width
                                and height and whose style is determined by the fillStyle attribute.
                                void ctx.fillRect(x, y, width, height);
                                // fill the whole canvas
                                // ctx.fillRect(0, 0, canvas.width, canvas.height);
                        // ================================================================
                        section#text-drawing.text-drawing.tab-pane.fade.well
                            div.btn.btn-default
                                span#fill-text Fill Text
                            p.desc.
                                The CanvasRenderingContext2D.fillText() method
                                of the Canvas 2D API fills a given text
                                at the given (x, y) position.
                                If the optional fourth parameter for a maximum width
                                is provided, the text will be scaled to fit that width.
                                void ctx.fillText(text, x, y [, maxWidth]);
                            div.btn.btn-default
                                span#stroke-text Border Text
                            p.desc.
                                The CanvasRenderingContext2D.strokeText() method
                                of the Canvas 2D API strokes a given text
                                at the given (x, y) position. If the optional fourth
                                parameter for a maximum width is provided,
                                the text will be scaled to fit that width.
                                void ctx.strokeText(text, x, y [, maxWidth]);
                        // ==================================================================================
                        section#images-drawing.images-drawing.tab-pane.fade.well
                            div.btn.btn-default
                                span#create-image Create an image
                            p.desc.
                                The CanvasRenderingContext2D.drawImage() method of the Canvas 2D API
                                provides different ways to draw an image onto the canvas.
                                void ctx.drawImage(image, dx, dy);
                                void ctx.drawImage(image, dx, dy, dWidth, dHeight);
                                void ctx.drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);
                                image - An element to draw into the context. The specification permits any canvas
                                image source (CanvasImageSource), such as an HTMLImageElement, an HTMLVideoElement,
                                an HTMLCanvasElement or an ImageBitmap.
                                dx - The X coordinate in the destination canvas at which to place
                                the top-left corner of the source image.
                                dy - The Y coordinate in the destination canvas at which to place the top-left
                                corner of the source image.
                                dWidth - The width to draw the image in the destination canvas.
                                This allows scaling of the drawn image. If not specified, the image is not scaled
                                in width when drawn.
                                dHeight - The height to draw the image in the destination canvas.
                                This allows scaling of the drawn image. If not specified, the image is not
                                scaled in height when drawn.
                                sx - The X coordinate of the top left corner of the sub-rectangle of the source
                                image to draw into the destination context.
                                sy - The Y coordinate of the top left corner of the sub-rectangle of the source
                                image to draw into the destination context.
                                sWidth - The width of the sub-rectangle of the source image to draw into the
                                destination context. If not specified, the entire rectangle from the
                                coordinatesspecified by sx and sy to the bottom-right corner of the image is used.
                                sHeight - The height of the sub-rectangle of the source image to draw into the
                                destination context.
                            div.btn.btn-default
                                span#tile-canvas Tile Canvas
                            p.desc.
                                The CanvasRenderingContext2D.createPattern() method of the Canvas 2D API
                                creates a pattern using the specified image (a CanvasImageSource).
                                It repeats the source in the directions specified by the repetition argument.
                                This method returns a CanvasPattern.
                                CanvasPattern ctx.createPattern(image, repetition);
                                "repeat" (both directions),
                                "repeat-x" (horizontal only),
                                "repeat-y" (vertical only), or
                                "no-repeat" (neither).
                                If repetition is an empty string ('') or null (but not undefined),
                                repetition will be "repeat".

                        // ===================================================================
                        section#animation-field.animate-buttons.tab-pane.fade.well
                            input#ball-size.boxed( type='number', value=15 )
                            div.btn.btn-default
                                span#random-circle Random Circle
                            p.desc Создает круг с заданным радиусом. Если радиус равер 0, то он будет случайным
                            div.btn.btn-default
                                span#animate-circles Animate Circles

                // ===================================================================
                section#control-btn-field.widget-container.boxed
                    div.btn.btn-default
                        span#restore-context-btn Restore Context
                    p.desc.
                        Восстанавливаем из стека верхнее состояние контекста
                        Если мы предварительно не сделали ctx.save(),
                        ничего не произойдет.
                        <code class="language-js">
                            // Пример<br>
                            void ctx.save();<br>
                            void ctx.restore();<br>
                        </code>
                    div.btn.btn-default
                        span#save-context-btn Save Context
                    p.desc.
                        Контекст - это все настройки рисования.
                        Метод save() сохраняет копию текущего состояния контекста
                        на вершину стека состояния.
                        <code class="language-js">
                            // Пример<br>
                            void ctx.save();<br>
                            void ctx.restore();<br>
                        </code>
                    div.btn.btn-default
                        span#clear-canvas-btn Clear Canvas
                    div.btn.btn-default
                        span#clear-cheet-btn Clear Cheet
                    div.btn.btn-default
                        span#clear-console-btn Clear Console

                     // ===================================================================
                    span.single-buttons
                        div.btn.btn-default
                            span#run-btn Run Canvas
                        div.btn.btn-default
                            span#reset-canvas-btn Reset Canvas

                    // ===================================================================
                    span#additional-objects-field.additional-objects-field
                        div.btn.btn-default
                            span#save-image Save Image
                        p.desc.

            div.row
                section.canvas-field.col-md-6
                    canvas#canvas-field( width="800" height="480" )
                    div#img-container.saved-image
                        img#img-copy.image-copy
                        p Щелкните правой кнопкой мыши для сохранения ...

                section.textarea-field.col-md-6
                    pre
                        code#console( class="language-js" contenteditable='true' autofocus )
                    div#cheet-area.cheet-area

            script( src="vendor/prism/prism.js" )
            script( src="app/js/jquery.js" )
            script( src="app/js/main.js" )
