doctype html
<!--[if lt IE 7]>
<html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="">
<![endif]-->
<!--[if IE 7]>
<html class="no-js lt-ie9 lt-ie8" lang="">
<![endif]-->
<!--[if IE 8]>
<html class="no-js lt-ie9" lang="">
<![endif]-->
<!--[if gt IE 8]><!-->
html( lang="ru" )
    <!--<![endif]-->
    header
        include header.jade
    body
        main
            section
                textarea#console

            section
                canvas#canvas-field( width=900, height=400 )
                div#img-container.saved-image
                    img#img-copy.image-copy
                    p Щелкните правой кнопкой мыши для сохранения ...

            section.btn-field
                div#run-btn.buttons Run Canvas
                div#clear-canvas-btn.buttons Clear Canvas

                section#control-btn-field
                    div#clear-console-btn.buttons Clear Console

                    div#restore-context-btn.buttons Restore Context
                        p.desc.
                            The CanvasRenderingContext2D.restore() method
                            of the Canvas 2D API restores the most recently
                            saved canvas state by popping the top entry in the
                            drawing state stack. If there is no saved state,
                            this method does nothing.
                            void ctx.restore();
                // ===================================================================
                section#additional-objects-field
                    div#save-image.buttons Save Image
                        p.desc.

                // ===================================================================
                section#canvas-btn-field
                    div#begin-path.buttons Begin Path
                        p.desc.
                            Creates a new path. Once created, future drawing
                            commands are directed into the path and used
                            to build the path up.
                            void ctx.beginPath();
                    div#close-path.buttons Close Path
                        p.desc.
                            Closes the path so that future drawing commands
                            are once again directed to the context.
                            void ctx.closePath();
                    div#move-canvas.buttons Move Canvas
                        p.desc.
                            The CanvasRenderingContext2D.translate() method of
                            the Canvas 2D API adds a translation transformation
                            by moving the canvas and its origin x horizontally
                            and y vertically on the grid.
                            void ctx.translate(x, y);
                    div#rotate-canvas.buttons Rotate Canvas
                        p.desc.
                            The CanvasRenderingContext2D.rotate() method of the
                            Canvas 2D API adds a rotation to the transformation
                            matrix. The angle argument represents a clockwise
                            rotation angle and is expressed in radians.
                            void ctx.rotate(angle);
                    // ============================================================
                    div#move-to.buttons Move To
                        p.desc.
                            The CanvasRenderingContext2D.moveTo() method of the
                            Canvas 2D API moves the starting point of a new
                            sub-path to the (x, y) coordinates.
                            void ctx.moveTo(x, y);
                    div#line-to.buttons Line To
                        p.desc.
                            The CanvasRenderingContext2D.lineTo() method of the
                            Canvas 2D API connects the last point in the
                            sub-path to the x, y coordinates with a straight
                            line (but does not actually draw it).
                            void ctx.lineTo(x, y);
                    div#stroke.buttons Stroke
                        p.desc.
                            The CanvasRenderingContext2D.stroke() method of the
                            Canvas 2D API strokes the current or given path
                            with the current stroke style using the non-zero
                            winding rule.
                            void ctx.stroke();
                            void ctx.stroke(path);
                    // =======================================================
                    div#line-width.buttons Line Width
                        p.desc.
                            The CanvasRenderingContext2D.lineWidth property of
                            the Canvas 2D API sets the thickness of lines in
                            space units. When getting, it returns the current
                            value (1.0 by default). When setting, zero,
                            negative, Infinity and NaN values are ignored;
                            otherwise the current value is set to the new value.
                            ctx.lineWidth = value;
                    // =========================================================
                    div#line-cap-round.buttons Round Line
                        p.desc.
                            The CanvasRenderingContext2D.lineCap property of
                            the Canvas 2D API determines how the end points of
                            every line are drawn. There are three possible
                            values for this property and those are: butt, round
                            and square. By default this property is set to butt.
                            ctx.lineCap = "butt";
                            ctx.lineCap = "round";
                            ctx.lineCap = "square";
                    div#border-radius.buttons Border Radius
                        p.desc.
                            Don't working with the filled shapes.
                            The CanvasRenderingContext2D.lineJoin property of the Canvas 2D API determines
                            how two connecting segments (of lines, arcs or curves) with non-zero lengths in
                            a shape are joined together (degenerate segments with zero lengths, whose
                            specified endpoints and control points are exactly at the same position, are skipped).
                            ctx.lineJoin = "bevel";
                            ctx.lineJoin = "round";
                            ctx.lineJoin = "miter";
                    // =================================================================
                    div#stroke-style.buttons Border Style
                        p.desc.
                            The CanvasRenderingContext2D.strokeStyle property of
                            the Canvas 2D API specifies the color or style to
                            use for the lines around shapes. The default is #000
                            (black).
                            ctx.strokeStyle = color;
                            ctx.strokeStyle = gradient;
                            ctx.strokeStyle = pattern;
                    // ===================================================================
                    div#bg-color.buttons Background Color
                        p.desc.
                            The CanvasRenderingContext2D.fillStyle property of the Canvas 2D API
                            specifies the color or style to use inside shapes. The default is #000 (black).

                            ctx.fillStyle = color;
                            ctx.fillStyle = gradient;
                            ctx.fillStyle = pattern;
                    div#shadow-color.buttons Shadow Color
                        p.desc.
                            The CanvasRenderingContext2D.shadowColor property of the Canvas 2D API
                            specifies the color of the shadow.
                            ctx.shadowColor = color;
                    div#shadow-blur.buttons Shadow Blur
                        p.desc.
                            The CanvasRenderingContext2D.shadowBlur property of the Canvas 2D API
                            specifies the level of the blurring effect; this value doesn't correspond
                            to a number of pixels and is not affected by the current transformation matrix.
                            The default value is 0.
                            ctx.shadowBlur = level;
                    div#shadow-position.buttons Shadow Position
                        p.desc.
                            The CanvasRenderingContext2D.shadowOffsetX property of the Canvas 2D API
                            specifies the distance that the shadow will be offset in horizontal distance.
                            ctx.shadowOffsetX = offset;
                    div#opacity.buttons Opacity
                        p.desc.
                            The CanvasRenderingContext2D.globalAlpha property of the Canvas 2D API
                            specifies the alpha value that is applied to shapes and images
                            before they are drawn onto the canvas.
                            The value is in the range from 0.0 (fully transparent) to 1.0 (fully opaque).
                            ctx.globalAlpha = value;
                    // ================================================================
                    div#fill-shape.buttons Fill Shape
                        p.desc.
                            The CanvasRenderingContext2D.fill() method of the Canvas 2D API
                            fills the current or given path with the current fill style
                            using the non-zero or even-odd winding rule.
                            void ctx.fill();
                            void ctx.fill(fillRule);
                            void ctx.fill(path, fillRule);
                    div#fill-text.buttons Fill Text
                        p.desc.
                            The CanvasRenderingContext2D.fillText() method
                            of the Canvas 2D API fills a given text
                            at the given (x, y) position.
                            If the optional fourth parameter for a maximum width
                            is provided, the text will be scaled to fit that width.
                            void ctx.fillText(text, x, y [, maxWidth]);
                    div#stroke-text.buttons Border Text
                        p.desc.
                            The CanvasRenderingContext2D.strokeText() method
                            of the Canvas 2D API strokes a given text
                            at the given (x, y) position. If the optional fourth
                            parameter for a maximum width is provided,
                            the text will be scaled to fit that width.
                            void ctx.strokeText(text, x, y [, maxWidth]);
                    // ==============================================================
                    div#straight-line.buttons Straight Line
                        p.desc ...
                    div#bezier.buttons Bezier Curve
                        p.desc.
                            The CanvasRenderingContext2D.bezierCurveTo() method
                            of the Canvas 2D API adds a cubic Bézier curve to the path.
                            It requires three points. The first two points are control points
                            and the third one is the end point.
                            The starting point is the last point in the current path,
                            which can be changed using moveTo() before creating the Bézier curve.
                            void ctx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);
                            cp1x - The x axis of the coordinate for the first control point.
                            cp1y - The y axis of the coordinate for first control point.
                            cp2x - The x axis of the coordinate for the second control point.
                            cp2y - The y axis of the coordinate for the second control point.
                            x - The x axis of the coordinate for the end point.
                            y - The y axis of the coordinate for the end point.
                    div#arc.buttons Arc Line
                        p.desc.
                            The CanvasRenderingContext2D.arc() method of the Canvas 2D API
                            adds an arc to the path which is centered at (x, y) position
                            with radius r starting at startAngle and ending at endAngle
                            going in the given direction by anticlockwise (defaulting to clockwise).
                            void ctx.arc(x, y, radius, startAngle, endAngle, anticlockwise);

                            x - The x coordinate of the arc's center.
                            y - The y coordinate of the arc's center.
                            radius - The arc's radius.
                            startAngle - The angle at which the arc starts, measured clockwise
                            from the positive x axis and expressed in radians.
                            endAngle - The angle at which the arc ends, measured clockwise
                            from the positive x axis and expressed in radians.
                            anticlockwise Optional - An optional Boolean
                            which, if true, causes the arc to be drawn counter-clockwise between the two angles.
                            By default it is drawn clockwise.
                    // ==================================================================================
                    div#round.buttons Round
                        p.desc ...
                    div#fill-rectangle.buttons Fill Rectangle
                        p.desc.
                            The CanvasRenderingContext2D.fillRect() method of the Canvas 2D API draws
                            a filled rectangle at (x, y) position whose size is determined by width
                            and height and whose style is determined by the fillStyle attribute.
                            void ctx.fillRect(x, y, width, height);
                            // fill the whole canvas
                            // ctx.fillRect(0, 0, canvas.width, canvas.height);
                    div#empty-rectangle.buttons Empty Rectangle
                        p.desc.
                            The CanvasRenderingContext2D.strokeRect() method of the Canvas 2D API paints
                            a rectangle which has a starting point at (x, y) and has a w width and an h
                            height onto the canvas, using the current stroke style.
                            void ctx.strokeRect(x, y, width, height);

                    div#create-linear-gradient.buttons Create Linear Gradient
                        p.desc.
                             The CanvasRenderingContext2D.createLinearGradient() method of the Canvas 2D API
                             creates a gradient along the line given by the coordinates represented by the parameters.
                             This method returns a linear CanvasGradient.
                             CanvasGradient ctx.createLinearGradient(x0, y0, x1, y1);

                    div#create-radial-gradient.buttons Create Radial Gradient
                        p.desc.
                            The CanvasRenderingContext2D.createRadialGradient() method of the Canvas 2D API
                            creates a radial gradient given by the coordinates of the two circles
                            represented by the parameters. This method returns a CanvasGradient.
                            CanvasGradient ctx.createRadialGradient(x0, y0, r0, x1, y1, r1);
                            x0 - The x axis of the coordinate of the start circle.
                            y0 - The y axis of the coordinate of the start circle.
                            r0 - The radius of the start circle.
                            x1 - The x axis of the coordinate of the end circle.
                            y1 - The y axis of the coordinate of the end circle.
                            r1 - The radius of the end circle.
                            CanvasGradient ctx.createRadialGradient(x0, y0, r0, x1, y1, r1);

                    div#create-image.buttons Create an image
                        p.desc.
                            The CanvasRenderingContext2D.drawImage() method of the Canvas 2D API
                            provides different ways to draw an image onto the canvas.
                            void ctx.drawImage(image, dx, dy);
                            void ctx.drawImage(image, dx, dy, dWidth, dHeight);
                            void ctx.drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);
                            image - An element to draw into the context. The specification permits any canvas
                            image source (CanvasImageSource), such as an HTMLImageElement, an HTMLVideoElement,
                            an HTMLCanvasElement or an ImageBitmap.
                            dx - The X coordinate in the destination canvas at which to place
                            the top-left corner of the source image.
                            dy - The Y coordinate in the destination canvas at which to place the top-left
                            corner of the source image.
                            dWidth - The width to draw the image in the destination canvas.
                            This allows scaling of the drawn image. If not specified, the image is not scaled
                            in width when drawn.
                            dHeight - The height to draw the image in the destination canvas.
                            This allows scaling of the drawn image. If not specified, the image is not
                            scaled in height when drawn.
                            sx - The X coordinate of the top left corner of the sub-rectangle of the source
                            image to draw into the destination context.
                            sy - The Y coordinate of the top left corner of the sub-rectangle of the source
                            image to draw into the destination context.
                            sWidth - The width of the sub-rectangle of the source image to draw into the
                            destination context. If not specified, the entire rectangle from the
                            coordinatesspecified by sx and sy to the bottom-right corner of the image is used.
                            sHeight - The height of the sub-rectangle of the source image to draw into the
                            destination context.
                    div#tile-canvas.buttons Tile Canvas
                        p.desc.
                            The CanvasRenderingContext2D.createPattern() method of the Canvas 2D API
                            creates a pattern using the specified image (a CanvasImageSource).
                            It repeats the source in the directions specified by the repetition argument.
                            This method returns a CanvasPattern.
                            CanvasPattern ctx.createPattern(image, repetition);
                            "repeat" (both directions),
                            "repeat-x" (horizontal only),
                            "repeat-y" (vertical only), or
                            "no-repeat" (neither).
                            If repetition is an empty string ('') or null (but not undefined),
                            repetition will be "repeat".

                div#random-circle.buttons Random Circle
                input#ball-size( type='number', value=15 )
                div#animate-circles.buttons Animate Circles

        script( src="app/js/main.js" )
